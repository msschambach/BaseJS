class t{constructor(t){this.name=t.name,this.data=t.data,this.$storage=t.storage}toString(){return String.prototype.isPrototypeOf(this.data)||"string"==typeof this.data?this.data:JSON.stringify(this.data)}save(){let t;return this.data instanceof Object&&"string"!=typeof this.data?(t=JSON.stringify(this.data),this.$storage.setItem(this.name,t)):this.$storage.setItem(this.name,this.data),this}delete(){this.$storage.removeItem(this.name)}}class s{constructor(t=!0){t?(this.$storage=window.localStorage,this.mode="localStorage"):(this.$storage=window.sessionStorage,this.mode="sessionStorage")}get length(){return this.$storage.length}parse(t){try{return JSON.parse(t)}catch(t){return}}each(t){for(const s in this.$storage){const e=this.find(s);e&&t(e,s)}}find(s){const e=this.$storage.getItem(s);return e?new t({storage:this.$storage,name:s,data:this.parse(e)||e}):null}findAll(){const t=[];for(const s in this.$storage){const e=this.find(s);e&&t.push(e)}return t}findAt(t,s=!0){return s?this.find(this.$storage.key(t)||""):this.$storage.getItem(this.$storage.key(t)||"")}indexOf(t){let s=0;for(const e in this.$storage){if(e===t)return s;s++}}set(t,s){let e;return s instanceof Object&&"string"!=typeof s?(e=JSON.stringify(s),this.$storage.setItem(t,e)):this.$storage.setItem(t,s),this}delete(t){return this.$storage.removeItem(t),this}deleteAll(){this.$storage.clear()}log(t){var s;return console.info(null===(s=this.find(t))||void 0===s?void 0:""+s),this}}export{s as BrowserStore,t as Record};
